// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type GetDestinationsDestinationsGetRequest struct {
	// Filter destinations by minimum rating (0 to 5).
	MinRating *float64 `default:"0" queryParam:"style=form,explode=true,name=min_rating"`
}

func (g GetDestinationsDestinationsGetRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetDestinationsDestinationsGetRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetDestinationsDestinationsGetRequest) GetMinRating() *float64 {
	if o == nil {
		return nil
	}
	return o.MinRating
}

type GetDestinationsDestinationsGetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	ResponseGetDestinationsDestinationsGet []components.Destination
}

func (o *GetDestinationsDestinationsGetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetDestinationsDestinationsGetResponse) GetResponseGetDestinationsDestinationsGet() []components.Destination {
	if o == nil {
		return nil
	}
	return o.ResponseGetDestinationsDestinationsGet
}
